{"mappings":"gfAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,yGCAxCH,EAAA,SAAAI,aAA6C,SAAWJ,EAAA,SAAAK,QAA6C,SCGtGC,SAASC,cAAc,uBAClBD,SAASC,cAAc,oBACvBD,SAASE,iBAAiB,0B","sources":["node_modules/@parcel/runtime-js/lib/runtime-742c8d3f35a61a59.js","node_modules/@parcel/runtime-js/lib/runtime-70378d880d4c68cb.js","src/js/shopping-section.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2GaqC\\\":\\\"shopping-list.89badb2a.js\\\",\\\"410VS\\\":\\\"icons.4a3d232f.svg\\\"}\"));","module.exports = require('./helpers/bundle-url').getBundleURL('2GaqC') + require('./helpers/bundle-manifest').resolve(\"410VS\");","import removeIcon from '/src/images/icons.svg#icon-remove';\n\n// Отримання посилань на елементи DOM\nconst booksEl = document.querySelector('.shopping-container');\nconst emptyListImg = document.querySelector('.empty-shop-list');\nconst imagesToHide = document.querySelectorAll('.shopping-list-book-img'); // Отримати всі зображення, які потрібно сховати\n\n// Отримання збережених книг з localStorage\nfunction getSavedBooks() {\nconst savedBooks = localStorage.getItem('userBucket'); \n  if (savedBooks) {\n    return JSON.parse(savedBooks);\n  }\n  return [];\n}\n\n// Створення HTML-розмітки для книги\nfunction generateBookCard(book) {\n  const { book_image, title, list_name, description, author, _id } = book;\n  return `<div class=\"book-card\">\n    <img class=\"book-card-image\" src=\"${book_image}\" alt=\"${title}\" />\n    <div class=\"book-card-info\">\n      <div class=\"card-title-container\">\n        <h3 class=\"card-title\">${title}</h3>\n        <p class=\"card-category\">${list_name}</p>\n      </div>\n      <button class=\"card-remove\" data-bookid=\"${_id}\">\n        <svg width=\"20\" height=\"20\">\n                            <use href=\"${removeIcon}\">\n                        </svg>\n      </button>\n    </div>\n    <p class=\"book-card-description\">${description}</p>\n    <p class=\"book-card-author\">Author: ${author}</p>\n  </div>`;\n}\n\n\n// Відображення списку книг\nfunction renderBooks() {\n  const savedBooks = getSavedBooks();\n\n  if (savedBooks.length === 0) {\n    emptyListImg.style.display = 'block';\n    booksEl.innerHTML = '';\n    // Сховати всі зображення, якщо список порожній\n    imagesToHide.forEach(image => {\n      image.style.display = 'none';\n    });\n  } else {\n    const booksMarkup = savedBooks.map(book => generateBookCard(book)).join('');\n    booksEl.innerHTML = booksMarkup;\n    emptyListImg.style.display = 'none';\n    // Відобразити всі зображення, якщо є книги в списку\n    imagesToHide.forEach(image => {\n      image.style.display = 'block';\n    });\n  }\n}\n\n\n\n// Обробник кліку на кнопці видалення\n// function handleRemoveBook(event) {\n//   // Код обробки кліку на кнопці видалення тут\n// }\n\n// Видалення книги зі списку корзини\n// function removeBookFromList(bookId) {\n//   // Код видалення книги зі списку тут\n// }\n\n// // Виклик функції для відображення списку книг при завантаженні сторінки\n// document.addEventListener('DOMContentLoaded', renderBooks);\n\n// // Виклик функції handleRemoveBook при кліку\n// document.querySelector('.card-remove').addEventListener('click', handleRemoveBook);\n"],"names":["parcelRequire","register","JSON","parse","getBundleURL","resolve","document","querySelector","querySelectorAll"],"version":3,"file":"shopping-list.89badb2a.js.map"}